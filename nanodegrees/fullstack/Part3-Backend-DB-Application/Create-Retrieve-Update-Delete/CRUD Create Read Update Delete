########################## Create ########################
vagrant@vagrant:/vagrant/restaurant$ python
Python 2.7.12 (default, Nov 19 2016, 06:48:10)
[GCC 5.4.0 20160609] on linux2
Type "help", "copyright", "credits" or "license" for more information.
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from database_setup import Base,Restaurant,MenuItem
engine = create_engine('sqlite:///restaurantmenu.db')
Base.metadata.bind = engine
DBSession = sessionmaker(bind = engine)
session = DBSession()

## create first restaurant
>>> myFirstRestaurant = Restaurant(name = "Pizza palace")
>>> session.add(myFirstRestaurant)
>>> session.commit()
>>> session.query(Restaurant).all()
[<database_setup.Restaurant object at 0xb6803d8c>]

## add cheesepizza to the menu and link to myFirstRestaurant
>>> cheesepizza = MenuItem( name = "Cheese Pizza", description = "Made wih all
natural ingredients", course = "Entree", price = "$8.99" , restaurant = myFirstRestaurant)
>>> session.add(cheesepizza)
>>>
>>> session.query(MenuItem).all()
[<database_setup.MenuItem object at 0xb680ef2c>]
>>> session.commit()



########################### READ ######################

>>> firstResult = session.query(Restaurant).first()
>>> firstResult.name
u'Pizza palace'


>>> allResult = session.query(Restaurant).all()
>>> for r in allResult:
...     print r.name
...
Pizza palace
Urban Burger
Super Stir Fry
Panda Garden
Thyme for That Vegetarian Cuisine
Tony's Bistro
Andala's
Auntie Ann's Diner'
Cocina Y Amor
State Bird Provisions

########################### UPDATE #####################
>>> veggieBurger = session.query(MenuItem).filter_by(name = 'Veggie Burger')
>>>
>>> for veggieBurger in veggieBurgers:
...     print veggieBurger.id
...     print veggieBurger.price
...     print veggieBurger.restaurant.name
...     print "\n"
...
2
$7.50
Urban Burger


10
$5.99
Urban Burger


21
$9.50
Panda Garden


27
$6.80
Thyme for That Vegetarian Cuisine


37
$7.00
Andala's


43
$9.50
Auntie Ann's Diner'

>>> veggieBurgers = session.query(MenuItem).filter_by(id = 10).one()
>>> veggieBurgers.price
u'$5.99'

## Reset the price
>>> veggieBurgers.price = '2.99'
>>> session.add(veggieBurgers)
>>> session.commit()
>>> veggieBurgers = session.query(MenuItem).filter_by(id = 10).one()
>>> veggieBurgers.price
u'2.99'


>>> veggieBurgers = session.query(MenuItem).filter_by(name = 'Veggie Burger')
>>> for veggieBurger in veggieBurgers:
...     if veggieBurger.price != '$2.99':
...         veggieBurger.price = '$2.99'
...         session.add(veggieBurger)
...         session.commit()



>>> for veggieBurger in veggieBurgers:
...      print veggieBurger.id
...      print veggieBurger.price
...      print veggieBurger.name
...      print veggieBurger.description
...      print veggieBurger.restaurant.name
...
2
$2.99
Veggie Burger
Juicy grilled veggie patty with tomato mayo and lettuce
Urban Burger
10
$2.99
Veggie Burger
Made with freshest of ingredients and home grown spices
Urban Burger
21
$2.99
Veggie Burger
Juicy grilled veggie patty with tomato mayo and lettuce
Panda Garden
27
$2.99
Veggie Burger
Juicy grilled veggie patty with tomato mayo and lettuce
Thyme for That Vegetarian Cuisine
37
$2.99
Veggie Burger
Juicy grilled veggie patty with tomato mayo and lettuce
Andala's
43
$2.99
Veggie Burger
Juicy grilled veggie patty with tomato mayo and lettuce
Auntie Ann's Diner'


>>>


##################### DELETE ##############################

>>> spinach = session.query(MenuItem).filter_by(name = 'Spinach Ice Cream').one()
>>> print spinach.restaurant.name
Auntie Ann's Diner'
>>> session.delete(spinach)
>>> session.commit()

>>> spinach = session.query(MenuItem).filter_by(name = 'Spinach Ice Cream').one()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py", line 2820, in one
    raise orm_exc.NoResultFound("No row was found for one()")
sqlalchemy.orm.exc.NoResultFound: No row was found for one()
